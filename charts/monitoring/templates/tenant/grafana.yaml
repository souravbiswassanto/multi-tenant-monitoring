{{- range .Values.tenants }}
---
# Grafana Deployment for {{ .name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}-grafana
  namespace: {{ .namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      tenant: {{ .name }}
  template:
    metadata:
      labels:
        app: grafana
        tenant: {{ .name }}
    spec:
      serviceAccountName: {{ .name }}-grafana-sa
      containers:
        - name: grafana
          image: grafana/grafana:{{ $.Values.monitoring.grafana.version }} # Use a specific Grafana version
          ports:
            - containerPort: 3000
              name: http
          resources:
            {{- toYaml $.Values.monitoring.grafana.resource | nindent 12 }}
          env:
            - name: PROMETHEUS_TOKEN
              valueFrom:
                secretKeyRef:
                  # Assumes a secret with this name and key exists for the tenant
                  name: {{ .name }}-grafana-sa-token
                  key: token
          volumeMounts:
            - name: datasource-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboard-config
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: datasource-config
          configMap:
            name: {{ .name }}-grafana-datasource-config
        - name: dashboard-config
          configMap:
            name: {{ .name }}-grafana-dashboards
---
# Service to expose the Grafana instance for {{ .name }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}-grafana-svc
  namespace: {{ .namespace }}
spec:
  selector:
    app: grafana
    tenant: {{ .name }}
  ports:
    - protocol: TCP
      port: 3000
      targetPort: http
{{- end }}