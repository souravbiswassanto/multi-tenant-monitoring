{{- range .Values.tenants }}
---
# ConfigMap to hold the datasource configuration for {{ .name }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name }}-grafana-datasource-config
  namespace: {{ .namespace }}
  labels:
    grafana_datasource: "1"
data:
  # https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-configuration-file
  datasources.yaml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        uid: {{ .name }}-prometheus
        access: proxy
        url: https://prom-frontend.{{ $.Values.monitoring.namespace }}.svc.cluster.local:9090/
        isDefault: true
        editable: false
        jsonData:
          # This is the key for tenant isolation
          customQueryParameters: "namespace={{ .namespace }}"
          httpHeaderName1: "Authorization"
          httpMethod: "GET"
          queryTimeout: 5m
          timeInterval: 30s
          tlsSkipVerify: true
        secureJsonData:
          httpHeaderValue1: "Bearer ${PROMETHEUS_TOKEN}"
---
# Grafana Deployment for {{ .name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}-grafana
  namespace: {{ .namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      tenant: {{ .name }}
  template:
    metadata:
      labels:
        app: grafana
        tenant: {{ .name }}
    spec:
      serviceAccountName: {{ .name }}-grafana-sa
      containers:
        - name: grafana
          image: grafana/grafana:{{ $.Values.monitoring.grafana.version }} # Use a specific Grafana version
          ports:
            - containerPort: 3000
              name: http
          resources:
            {{- toYaml $.Values.monitoring.grafana.resource | nindent 12 }}
          env:
            - name: PROMETHEUS_TOKEN
              valueFrom:
                secretKeyRef:
                  # Assumes a secret with this name and key exists for the tenant
                  name: {{ .name }}-grafana-sa-token
                  key: token
          volumeMounts:
            - name: datasource-config
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: datasource-config
          configMap:
            name: {{ .name }}-grafana-datasource-config
---
# Service to expose the Grafana instance for {{ .name }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}-grafana-svc
  namespace: {{ .namespace }}
spec:
  selector:
    app: grafana
    tenant: {{ .name }}
  ports:
    - protocol: TCP
      port: 3000
      targetPort: http
{{- end }}