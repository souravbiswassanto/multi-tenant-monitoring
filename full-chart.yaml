---
# Source: monitoring/templates/querier-frontend/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-kube-rbac-proxy
  namespace: monitoring
---
# Source: monitoring/templates/tenant/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenant1-grafana-sa
  namespace: acme-dev
---
# Source: monitoring/templates/tenant/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenant2-grafana-sa
  namespace: acme-prod
---
# Source: monitoring/templates/tenant/token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: tenant1-grafana-sa-token
  namespace: acme-dev
  annotations:
    kubernetes.io/service-account.name: tenant1-grafana-sa
type: kubernetes.io/service-account-token
---
# Source: monitoring/templates/tenant/token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: tenant2-grafana-sa-token
  namespace: acme-prod
  annotations:
    kubernetes.io/service-account.name: tenant2-grafana-sa
type: kubernetes.io/service-account-token
---
# Source: monitoring/templates/querier-frontend/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-rbac-proxy
  namespace: monitoring
data:
  config.yaml: |+
    authorization:
      rewrites:
        byQueryParameter:
          name: "namespace"
      resourceAttributes:
        apiVersion: v1
        resource: pods
        subresource: metrics
        namespace: "{{ .Value }}"
---
# Source: monitoring/templates/tenant/dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant1-grafana-dashboards
  namespace: acme-dev
  labels:
    # This label is used by Grafana's dashboard provisioner to discover this ConfigMap
    grafana_dashboard: "1"
data:
  dashboards.yaml: |-
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /etc/grafana/provisioning/dashboards
  # The key here will be the filename inside Grafana's provisioning directory
  tenant1-k8s-dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "tenant1-prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "tenant1-prometheus"
              },
              "editorMode": "code",
              "expr": "container_memory_working_set_bytes",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "New panel",
          "type": "timeseries"
        }
      ],
      "preload": false,
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "New dashboard",
      "uid": "e70e2b5c-726b-4bde-98ce-db4fb07ee4df",
      "version": 1
    }
---
# Source: monitoring/templates/tenant/dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant2-grafana-dashboards
  namespace: acme-prod
  labels:
    # This label is used by Grafana's dashboard provisioner to discover this ConfigMap
    grafana_dashboard: "1"
data:
  dashboards.yaml: |-
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /etc/grafana/provisioning/dashboards
  # The key here will be the filename inside Grafana's provisioning directory
  tenant2-k8s-dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "tenant2-prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "tenant2-prometheus"
              },
              "editorMode": "code",
              "expr": "container_memory_working_set_bytes",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "New panel",
          "type": "timeseries"
        }
      ],
      "preload": false,
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "New dashboard",
      "uid": "e70e2b5c-726b-4bde-98ce-db4fb07ee4df",
      "version": 1
    }
---
# Source: monitoring/templates/tenant/datasource.yaml
# ConfigMap to hold the datasource configuration for tenant1
apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant1-grafana-datasource-config
  namespace: acme-dev
  labels:
    grafana_datasource: "1"
data:
  # https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-configuration-file
  datasources.yaml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        uid: tenant1-prometheus
        access: proxy
        url: https://prom-frontend.monitoring.svc.cluster.local:9090/
        isDefault: true
        editable: false
        jsonData:
          # This is the key for tenant isolation
          customQueryParameters: "namespace=acme-dev"
          httpHeaderName1: "Authorization"
          httpMethod: "GET"
          queryTimeout: 5m
          timeInterval: 30s
          tlsSkipVerify: true
        secureJsonData:
          httpHeaderValue1: "Bearer ${PROMETHEUS_TOKEN}"
---
# Source: monitoring/templates/tenant/datasource.yaml
# ConfigMap to hold the datasource configuration for tenant2
apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant2-grafana-datasource-config
  namespace: acme-prod
  labels:
    grafana_datasource: "1"
data:
  # https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-configuration-file
  datasources.yaml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        uid: tenant2-prometheus
        access: proxy
        url: https://prom-frontend.monitoring.svc.cluster.local:9090/
        isDefault: true
        editable: false
        jsonData:
          # This is the key for tenant isolation
          customQueryParameters: "namespace=acme-prod"
          httpHeaderName1: "Authorization"
          httpMethod: "GET"
          queryTimeout: 5m
          timeInterval: 30s
          tlsSkipVerify: true
        secureJsonData:
          httpHeaderValue1: "Bearer ${PROMETHEUS_TOKEN}"
---
# Source: monitoring/templates/querier-frontend/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-kube-rbac-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: prometheus-kube-rbac-proxy
    namespace: monitoring
---
# Source: monitoring/templates/tenant/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tenant1-grafana-role
  namespace: acme-dev
rules:
  - apiGroups: [""]
    resources:
      - pods/metrics
    verbs: ["get"]
---
# Source: monitoring/templates/tenant/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tenant2-grafana-role
  namespace: acme-prod
rules:
  - apiGroups: [""]
    resources:
      - pods/metrics
    verbs: ["get"]
---
# Source: monitoring/templates/tenant/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant1-grafana-rb
  namespace: acme-dev
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tenant1-grafana-role
subjects:
  - kind: ServiceAccount
    name: tenant1-grafana-sa
    namespace: acme-dev
---
# Source: monitoring/templates/tenant/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant2-grafana-rb
  namespace: acme-prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tenant2-grafana-role
subjects:
  - kind: ServiceAccount
    name: tenant2-grafana-sa
    namespace: acme-prod
---
# Source: monitoring/templates/querier-frontend/proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: prom-frontend
  namespace: monitoring
  labels:
    app: prom-frontend
spec:
  selector:
      app: prom-frontend
  ports:
    - name: http
      port: 9090
      targetPort: 9090
---
# Source: monitoring/templates/tenant/grafana.yaml
# Service to expose the Grafana instance for tenant1
apiVersion: v1
kind: Service
metadata:
  name: tenant1-grafana-svc
  namespace: acme-dev
spec:
  selector:
    app: grafana
    tenant: tenant1
  ports:
    - protocol: TCP
      port: 3000
      targetPort: http
---
# Source: monitoring/templates/tenant/grafana.yaml
# Service to expose the Grafana instance for tenant2
apiVersion: v1
kind: Service
metadata:
  name: tenant2-grafana-svc
  namespace: acme-prod
spec:
  selector:
    app: grafana
    tenant: tenant2
  ports:
    - protocol: TCP
      port: 3000
      targetPort: http
---
# Source: monitoring/templates/querier-frontend/proxy-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-frontend
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prom-frontend
  template:
    metadata:
      labels:
        app: prom-frontend
        type: querier-frontend
    spec:
      serviceAccountName: prometheus-kube-rbac-proxy
      containers:
        - name: kube-rbac-proxy
          image: quay.io/brancz/kube-rbac-proxy:v0.18.1
          args:
            - "--secure-listen-address=0.0.0.0:9090"
            - "--upstream=http://127.0.0.1:8080/"
            - "--config-file=/etc/kube-rbac-proxy/config.yaml"
            - "--logtostderr=true"
            - "--v=10"
          ports:
            - containerPort: 9090
              name: https
          volumeMounts:
            - name: config
              mountPath: /etc/kube-rbac-proxy
          resources:
            limits:
              cpu: 150m
              memory: 500Mi
            requests:
              cpu: 30m
              memory: 64Mi
        - name: prom-label-proxy
          image: quay.io/prometheuscommunity/prom-label-proxy:v0.11.0
          imagePullPolicy: Always
          args:
            - "--insecure-listen-address=127.0.0.1:8080"
            - "--upstream=http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090/"
            - "--label=namespace"
            - "--enable-label-apis=true"
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 30m
              memory: 64Mi
          ports:
            - containerPort: 8080
              name: https
      volumes:
        - name: config
          configMap:
            name: kube-rbac-proxy
---
# Source: monitoring/templates/tenant/grafana.yaml
# Grafana Deployment for tenant1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant1-grafana
  namespace: acme-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      tenant: tenant1
  template:
    metadata:
      labels:
        app: grafana
        tenant: tenant1
    spec:
      serviceAccountName: tenant1-grafana-sa
      containers:
        - name: grafana
          image: grafana/grafana:12.0.2 # Use a specific Grafana version
          ports:
            - containerPort: 3000
              name: http
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 64m
              memory: 64Mi
          env:
            - name: PROMETHEUS_TOKEN
              valueFrom:
                secretKeyRef:
                  # Assumes a secret with this name and key exists for the tenant
                  name: tenant1-grafana-sa-token
                  key: token
          volumeMounts:
            - name: datasource-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboard-config
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: datasource-config
          configMap:
            name: tenant1-grafana-datasource-config
        - name: dashboard-config
          configMap:
            name: tenant1-grafana-dashboards
---
# Source: monitoring/templates/tenant/grafana.yaml
# Grafana Deployment for tenant2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant2-grafana
  namespace: acme-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      tenant: tenant2
  template:
    metadata:
      labels:
        app: grafana
        tenant: tenant2
    spec:
      serviceAccountName: tenant2-grafana-sa
      containers:
        - name: grafana
          image: grafana/grafana:12.0.2 # Use a specific Grafana version
          ports:
            - containerPort: 3000
              name: http
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 64m
              memory: 64Mi
          env:
            - name: PROMETHEUS_TOKEN
              valueFrom:
                secretKeyRef:
                  # Assumes a secret with this name and key exists for the tenant
                  name: tenant2-grafana-sa-token
                  key: token
          volumeMounts:
            - name: datasource-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboard-config
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: datasource-config
          configMap:
            name: tenant2-grafana-datasource-config
        - name: dashboard-config
          configMap:
            name: tenant2-grafana-dashboards
